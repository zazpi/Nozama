pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh 'cd app/ && ./mvnw -B -DskipTests clean install'
            }
        }
        stage('Test') {
            steps {
                sh 'cd app/ && ./mvnw test'
            }
            post {
                always {
                    junit 'app/target/surefire-reports/*.xml'
                }
            }
        }
        stage('Static analysis'){
            steps {
		    script {
			def scannerHome = tool 'SonarQubeScanner3'
                	withSonarQubeEnv('sonar_server') {
                    		sh "cd app/ && ./mvnw sonar:sonar"
                	}
		}
            }
        }
        stage('Docker build') {
            steps {
                sh 'cd app/ && docker build -t devallday/nozama:latest .'
            }
        }
        stage('Docker login') {
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub_account',
                                 usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
                                 sh "docker login --username $USERNAME --password $PASSWORD"
                 }
            }
        }
        stage('Docker push') {
            steps {
                sh 'docker push devallday/nozama:latest'
            }
        }
    }
}
