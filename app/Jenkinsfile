pipeline {
    agent any
    stages {
        stage('Build app') {
            steps {
                sh "echo 'starting nozama application build...'"
                sh 'cd app/ && ./mvnw -B -DskipTests clean package'
            }
        }
        stage('Build simulator') {
           steps {
                sh "echo 'starting simulator build...'"
                sh 'cd simulation/simulator/ && ./mvnw -B -DskipTests clean package'
            }
        }
        stage('Tests app') {
            steps {
                sh "echo 'executing nozama apllication unit tests...'"
                sh 'cd app/ && ./mvnw test'
            }
            post {
                always {
                    junit 'app/target/surefire-reports/*.xml'
                }
            }
        }
        stage('Tests simulator') {
            steps {
                sh "echo 'executing simulator unit tests...'"
                sh 'cd simulation/simulator/ && ./mvnw test'
            }
        }
        stage('Static analysis'){
            steps {
                sh "echo 'starting static analysis in sonar server...'"
		    script {
			def scannerHome = tool 'SonarQubeScanner3'
                	withSonarQubeEnv('sonar_server') {
                                sh "echo 'app static analysis...'"
                    		sh 'cd app/ && ./mvnw sonar:sonar'
                                sh "echo 'simulator static analysis...'"
                                sh 'cd simulation/simulator/ && ./mvnw sonar:sonar'
                	}
		}
            }
        }
        stage('Build image') {
            steps {
                sh "echo 'Building docker image...'"
                sh 'cd app/ && docker build -t devallday/nozama:latest .'
            }
        }
        stage('DockerHub authentication') {
            steps {
                sh "echo 'Authenticating with DockerHub registry...'"
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub_account',
                                 usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
                                 sh "docker login --username $USERNAME --password $PASSWORD"
                 }
            }
        }
        stage('Push & Deploy') {
            steps {
                sh "echo 'Pushing docker image to registry...'"
                sh 'docker push devallday/nozama:latest'
                sh "echo 'Deployment triggering through webhook'"
            }
        }
    }
}
